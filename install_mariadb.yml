---
- name: Instalar MariaDB en server02
  hosts: dbserver
  become: true
  vars:
    db_root_password: "tlxadmin"
    db_user: "sysadmin"
    db_user_password: "tlxadmin"
    db_name: "todo"
  tasks:
    - name: Instalar PyMySQL
      ansible.builtin.apt:
        name: python3-pymysql
        state: present
        update_cache: true

    - name: Instalar MariaDB
      ansible.builtin.apt:
        name: mariadb-server
        state: present
        update_cache: true

    - name: Cambiar la configuracion para escuchar en todas las interfaces
      ansible.builtin.lineinfile:
        path: /etc/mysql/mariadb.conf.d/50-server.cnf
        regexp: '^bind-address'
        line: 'bind-address         = 0.0.0.0'
      notify: Restart mariadb

    - name: Iniciar y habilitar el servicio de MariaDB
      ansible.builtin.systemd:
        name: mariadb
        state: started
        enabled: true

    - name: Crear archivo de configuración temporal para MySQL
      ansible.builtin.copy:
        dest: /root/.my.cnf
        content: |
          [client]
          user=root
          password={{ db_root_password }}
      no_log: true

    - name: Configurar contraseña de root y asegurar MariaDB
      ansible.builtin.shell: |
        mysql -e "SET PASSWORD FOR 'root'@'localhost' = PASSWORD('{{ db_root_password }}');"
        mysql -e "DELETE FROM mysql.user WHERE User='';"
        mysql -e "DROP DATABASE IF EXISTS test;"
        mysql -e "DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%';"
        mysql -e "FLUSH PRIVILEGES;"
      args:
        executable: /bin/bash

    - name: Crear base de datos
      community.mysql.mysql_db:
        name: "{{ db_name }}"
        state: present

    - name: Crear usuario de base de datos
      community.mysql.mysql_user:
        name: "{{ db_user }}"
        password: "{{ db_user_password }}"
        priv: "{{ db_name }}.*:ALL"
        host: "%"
        state: present

    - name: Configurar el firewall para permitir acceso a MariaDB
      community.general.ufw:
        rule: allow
        port: '3306'
        proto: tcp

    - name: Eliminar archivo de configuración temporal para MySQL
      ansible.builtin.file:
        path: /root/.my.cnf
        state: absent

  handlers:

    - name: Restart mariadb
      ansible.builtin.systemd_service: 
        name: mariadb
        state: restarted
